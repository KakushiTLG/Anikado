async def search(m, user):
    checkBattles = await db.Matches.exists(Q(player1=user.id) | Q(player2=user.id), ~Q(status=5))
    if checkBattles: return await m.answer("–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—å —Å –Ω–µ–π.")
    if user.search == 0:
        items = await db.Inventory.exists(idplayer=user.id, status=2)
        if not items: return await m.answer("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–ª–æ–¥—É —á–µ—Ä–µ–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å, –±–µ–∑ –∫–æ–ª–æ–¥—ã –æ—Å–æ–±–æ –Ω–µ –Ω–∞–∏–≥—Ä–∞–µ—à—å—Å—è...")
        search = await db.System.get(name='search')
        if search.value == 0: return await m.answer("–í–µ–¥—É—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã. –°–∫–æ—Ä–æ –≤—Å—ë –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç!")
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        searching = await db.Users.filter(search=1).only('id').count()
        markup.add(InlineKeyboardButton('–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è ranked (üîç: {})'.format(searching), callback_data="search_standart"))
        searching = await db.Users.filter(search=2).only('id').count()
        markup.add(InlineKeyboardButton('–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è unranked (üîç: {})'.format(searching), callback_data="search_standartUnranked"))
        searching = await db.Users.filter(search=3).only('id').count()
        markup.add(InlineKeyboardButton('–ö–æ—Ä–æ—Ç–∫–∞—è unranked (üîç: {})'.format(searching), callback_data="search_shortUnranked"))
        searching = await db.Users.filter(search=4).only('id').count()
        markup.add(InlineKeyboardButton('–í–æ–π–Ω–∞ –∫–æ–ª–æ–¥ unranked (üîç: {})'.format(searching), callback_data="search_warUnranked"))
        text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å:\n\n–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è ranked - —É –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ –ø–æ 1‚ö°Ô∏è, 50‚ù§Ô∏è. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã –≤–ª–∏—è—é—Ç –Ω–∞ —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º–µ—Å—Ç–æ –≤ –ª–∏–≥–µ. –î–ª—è —Ç–µ—Ö, –∫—Ç–æ –≥–æ—Ç–æ–≤ —Ä–∞–∑—Ä—ã–≤–∞—Ç—å —Ç–æ–ø—ã."
        text += "\n\n–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è unranked - —É –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ –ø–æ 1‚ö°Ô∏è, 50‚ù§Ô∏è. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã –Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞ —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º–µ—Å—Ç–æ –≤ –ª–∏–≥–µ. –î–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –ø–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è."
        text += "\n\n–ö–æ—Ä–æ—Ç–∫–∞—è unranked - —É –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ –ø–æ 1‚ö°Ô∏è, 25‚ù§Ô∏è. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã –Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞ —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º–µ—Å—Ç–æ –≤ –ª–∏–≥–µ. –î–ª—è —Ç–µ—Ö, –∫—Ç–æ –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø–æ–ª–Ω—É—é –ø–∞—Ä—Ç–∏—é."
        text += "\n\n–í–æ–π–Ω–∞ –∫–æ–ª–æ–¥ unranked - —É –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ –ø–æ 15‚ö°Ô∏è, 50‚ù§Ô∏è. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã –Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞ —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º–µ—Å—Ç–æ –≤ –ª–∏–≥–µ. –£—Å—Ç—Ä–æ–π—Ç–µ –Ω–∞—Å—Ç–æ—è—â—É—é –∑–∞—Ä—É–±—É!"
        await m.answer(text, reply_markup=markup)
    else:
        await db.Users.filter(id=user.id).update(search=0)
        await m.answer("–ü–æ–∏—Å–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –î–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∏—Å–∫–∞")



async def search_(call, user):
    
    checkBattles = await db.Matches.exists(Q(player1=user.id) | Q(player2=user.id), ~Q(status=5))
    if checkBattles: return await bot.send_message(call.message.chat.id,"–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—å —Å –Ω–µ–π.")

    await db.Inventory.filter(idplayer=user.id).update(nowhp=F('hp'))
    

    if call.data.split("_")[1] == 'standart':
        searching = await db.Users.filter(~Q(search=0)).only('id').count()
        playing = await db.Matches.filter(~Q(status=5)).only('id').count()
        playing *= 2
        searching += 1
        await bot.edit_message_text("–í—ã –Ω–∞—á–∞–ª–∏ –ø–æ–∏—Å–∫ –∏–≥—Ä—ã –≤ —Ä–µ–∂–∏–º–µ Ranked. –ï—Å–ª–∏ –≤–∞–º –Ω–∞–¥–æ–µ—Å—Ç –∂–¥–∞—Ç—å, –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∏—Å–∫–∞\n\nüîç–í—Å–µ–≥–æ –≤ –ø–æ–∏—Å–∫–µ: {}\nüé≤–í –ø–∞—Ä—Ç–∏–∏: {}\n‚ú¥Ô∏èELO: {}".format(searching, playing, user.elo), call.message.chat.id, call.message.message_id)
        rand = random.randint(3, 15)
        await db.Users.filter(id=user.id).update(search=1)
        await asyncio.sleep(rand)
        await user.refresh_from_db()
        if user.search != 1: return
        checkOthers = await db.Users.filter(~Q(id=user.id), search=1, league=user.league).only('id')
        if checkOthers:
            allPlayers = []
            for other in checkOthers:
                allPlayers.append(other.id)
            tries = 5
            while tries > 0:
                tries -= 1
                randomedEnemy = random.choice(allPlayers)
                enemy = await db.Users.get(id=randomedEnemy).first()
                checkBattles = await db.Matches.exists(Q(player1=enemy.id) | Q(player2=enemy.id), ~Q(status=5))
                if not checkBattles:
                    try:
                        await bot.send_message(enemy.user_id, "–ü–∞—Ä—Ç–∏—è –Ω–∞–π–¥–µ–Ω–∞! \n–°—Ä–∞–∂–µ–Ω–∏–µ {} vs {}!".format(user.username, enemy.username))
                        await bot.send_message(user.user_id, "–ü–∞—Ä—Ç–∏—è –Ω–∞–π–¥–µ–Ω–∞! \n–°—Ä–∞–∂–µ–Ω–∏–µ {} vs {}!".format(user.username, enemy.username))
                        return await startGame(user, enemy)
                    except:
                        pass
    

    elif call.data.split("_")[1] == 'standartUnranked':
        searching = await db.Users.filter(~Q(search=0)).only('id').count()
        playing = await db.Matches.filter(~Q(status=5)).only('id').count()
        playing *= 2
        searching += 1
        await bot.edit_message_text("–í—ã –Ω–∞—á–∞–ª–∏ –ø–æ–∏—Å–∫ –∏–≥—Ä—ã –≤ —Ä–µ–∂–∏–º–µ Unranked. –ï—Å–ª–∏ –≤–∞–º –Ω–∞–¥–æ–µ—Å—Ç –∂–¥–∞—Ç—å, –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∏—Å–∫–∞\n\nüîç–í—Å–µ–≥–æ –≤ –ø–æ–∏—Å–∫–µ: {}\nüé≤–í –ø–∞—Ä—Ç–∏–∏: {}\n‚ú¥Ô∏èELO: {}".format(searching, playing, user.elo), call.message.chat.id, call.message.message_id)
        rand = random.randint(3, 15)
        await db.Users.filter(id=user.id).update(search=2)
        await asyncio.sleep(rand)
        await user.refresh_from_db()
        if user.search != 2: return
        checkOthers = await db.Users.filter(~Q(id=user.id), search=2).only('id')
        if checkOthers:
            allPlayers = []
            for other in checkOthers:
                allPlayers.append(other.id)
            tries = 5
            while tries > 0:
                tries -= 1
                randomedEnemy = random.choice(allPlayers)
                enemy = await db.Users.get(id=randomedEnemy).first()
                checkBattles = await db.Matches.exists(Q(player1=enemy.id) | Q(player2=enemy.id), ~Q(status=5))
                if not checkBattles:
                    try:
                        await bot.send_message(enemy.user_id, "–ü–∞—Ä—Ç–∏—è –Ω–∞–π–¥–µ–Ω–∞! \n–°—Ä–∞–∂–µ–Ω–∏–µ {} vs {}!".format(user.username, enemy.username))
                        await bot.send_message(user.user_id, "–ü–∞—Ä—Ç–∏—è –Ω–∞–π–¥–µ–Ω–∞! \n–°—Ä–∞–∂–µ–Ω–∏–µ {} vs {}!".format(user.username, enemy.username))
                        return await startGameUnrankedStandart(user, enemy)
                    except:
                        pass
    

    elif call.data.split("_")[1] == 'shortUnranked':
        searching = await db.Users.filter(~Q(search=0)).only('id').count()
        playing = await db.Matches.filter(~Q(status=5)).only('id').count()
        playing *= 2
        searching += 1
        await bot.edit_message_text("–í—ã –Ω–∞—á–∞–ª–∏ –ø–æ–∏—Å–∫ –∏–≥—Ä—ã –≤ —Ä–µ–∂–∏–º–µ –ö–æ—Ä–æ—Ç–∫–∞—è Unranked. –ï—Å–ª–∏ –≤–∞–º –Ω–∞–¥–æ–µ—Å—Ç –∂–¥–∞—Ç—å, –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∏—Å–∫–∞\n\nüîç–í—Å–µ–≥–æ –≤ –ø–æ–∏—Å–∫–µ: {}\nüé≤–í –ø–∞—Ä—Ç–∏–∏: {}\n‚ú¥Ô∏èELO: {}".format(searching, playing, user.elo), call.message.chat.id, call.message.message_id)
        rand = random.randint(3, 15)
        await db.Users.filter(id=user.id).update(search=3)
        await asyncio.sleep(rand)
        await user.refresh_from_db()
        if user.search != 3: return
        checkOthers = await db.Users.filter(~Q(id=user.id), search=3).only('id')
        if checkOthers:
            allPlayers = []
            for other in checkOthers:
                allPlayers.append(other.id)
            tries = 5
            while tries > 0:
                tries -= 1
                randomedEnemy = random.choice(allPlayers)
                enemy = await db.Users.get(id=randomedEnemy).first()
                checkBattles = await db.Matches.exists(Q(player1=enemy.id) | Q(player2=enemy.id), ~Q(status=5))
                if not checkBattles:
                    try:
                        await bot.send_message(enemy.user_id, "–ü–∞—Ä—Ç–∏—è –Ω–∞–π–¥–µ–Ω–∞! \n–°—Ä–∞–∂–µ–Ω–∏–µ {} vs {}!".format(user.username, enemy.username))
                        await bot.send_message(user.user_id, "–ü–∞—Ä—Ç–∏—è –Ω–∞–π–¥–µ–Ω–∞! \n–°—Ä–∞–∂–µ–Ω–∏–µ {} vs {}!".format(user.username, enemy.username))
                        return await startGameUnrankedShort(user, enemy)
                    except:
                        pass
    

    elif call.data.split("_")[1] == 'warUnranked':
        searching = await db.Users.filter(~Q(search=0)).only('id').count()
        playing = await db.Matches.filter(~Q(status=5)).only('id').count()
        playing *= 2
        searching += 1
        await bot.edit_message_text("–í—ã –Ω–∞—á–∞–ª–∏ –ø–æ–∏—Å–∫ –∏–≥—Ä—ã –≤ —Ä–µ–∂–∏–º–µ –í–æ–π–Ω–∞ –∫–æ–ª–æ–¥ Unranked. –ï—Å–ª–∏ –≤–∞–º –Ω–∞–¥–æ–µ—Å—Ç –∂–¥–∞—Ç—å, –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∏—Å–∫–∞\n\nüîç–í—Å–µ–≥–æ –≤ –ø–æ–∏—Å–∫–µ: {}\nüé≤–í –ø–∞—Ä—Ç–∏–∏: {}\n‚ú¥Ô∏èELO: {}".format(searching, playing, user.elo), call.message.chat.id, call.message.message_id)
        rand = random.randint(3, 15)
        await db.Users.filter(id=user.id).update(search=4)
        await asyncio.sleep(rand)
        await user.refresh_from_db()
        if user.search != 4: return
        checkOthers = await db.Users.filter(~Q(id=user.id), search=4).only('id')
        if checkOthers:
            allPlayers = []
            for other in checkOthers:
                allPlayers.append(other.id)
            tries = 5
            while tries > 0:
                tries -= 1
                randomedEnemy = random.choice(allPlayers)
                enemy = await db.Users.get(id=randomedEnemy).first()
                checkBattles = await db.Matches.exists(Q(player1=enemy.id) | Q(player2=enemy.id), ~Q(status=5))
                if not checkBattles:
                    try:
                        await bot.send_message(enemy.user_id, "–ü–∞—Ä—Ç–∏—è –Ω–∞–π–¥–µ–Ω–∞! \n–°—Ä–∞–∂–µ–Ω–∏–µ {} vs {}!".format(user.username, enemy.username))
                        await bot.send_message(user.user_id, "–ü–∞—Ä—Ç–∏—è –Ω–∞–π–¥–µ–Ω–∞! \n–°—Ä–∞–∂–µ–Ω–∏–µ {} vs {}!".format(user.username, enemy.username))
                        return await startGameUnrankedWar(user, enemy)
                    except:
                        pass
